<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
                        http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
                        http://www.springframework.org/schema/context
                        http://www.springframework.org/schema/context/spring-context-4.0.xsd
                        http://www.springframework.org/schema/mvc
                        http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd">

    <mvc:annotation-driven>
        <mvc:message-converters register-defaults="true">
            <bean class="org.springframework.http.converter.StringHttpMessageConverter">
                <property name="supportedMediaTypes" value="text/plain;charset=UTF-8"/>
            </bean>
        </mvc:message-converters>
    </mvc:annotation-driven>

    <!-- 自动扫描  @Controller-->
    <context:component-scan base-package="com.lwf.ssm.controller"/>

    <!-- 配置直接转发的页面 -->
    <!--<mvc:view-controller path="/login.html" view-name="login" />-->
    <!--<mvc:view-controller path="/user/callback.html" view-name="/user/callback" />-->

    <!--避免IE执行AJAX时，返回JSON出现下载文件 -->
    <bean id="mappingJacksonHttpMessageConverter"
          class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
        <property name="supportedMediaTypes">
            <list>
                <value>text/html;charset=UTF-8</value>
            </list>
        </property>
    </bean>

    <!--RequestMappingHandlerAdapter-->
    <mvc:annotation-driven>
        <mvc:message-converters>
            <ref bean="stringHttpMessageConverter"/>
            <ref bean="marshallingHttpMessageConverter"/>
            <ref bean="mappingJackson2HttpMessageConverter"/>
        </mvc:message-converters>
    </mvc:annotation-driven>
    <!-- 启动SpringMVC的注解功能，完成请求和注解POJO的映射 -->
    <!--<bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">-->
    <!--<property name="messageConverters">-->
    <!--<list>-->
    <!--<ref bean="mappingJacksonHttpMessageConverter"/> &lt;!&ndash; JSON转换器 &ndash;&gt;-->
    <!--</list>-->
    <!--</property>-->
    <!--</bean>-->


    <!-- 定义跳转的文件的前后缀 ，视图模式配置 -->
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="prefix" value="/WEB-INF/jsp/"/>
        <property name="suffix" value=".jsp"/>
    </bean>

    <!-- 文件上传配置 -->
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <!-- 默认编码 -->
        <property name="defaultEncoding" value="UTF-8"/>
        <!-- 上传文件大小限制为31M，31*1024*1024 -->
        <property name="maxUploadSize" value="32505856"/>
        <!-- 内存中的最大值 -->
        <property name="maxInMemorySize" value="4096"/>
    </bean>

    <!-- 拦截器配置 -->
    <mvc:interceptors>
        <!-- 检查用户权限，对于部分不需要权限的路径进行排除 -->
        <mvc:interceptor>
            <!-- 先匹配所有路径，然后排除不需要检查的路径 -->
            <mvc:mapping path="/**"/>
            <!-- 与登录相关的请求 -->
            <mvc:exclude-mapping path="/user/login"/>
            <mvc:exclude-mapping path="/user/anonymous"/>

            <!-- 以下是静态资源 -->
            <mvc:exclude-mapping path="/img/**"/>
            <mvc:exclude-mapping path="/css/**"/>
            <mvc:exclude-mapping path="/js/**"/>

            <!-- 客户端文件上传下载，不使用该校验 -->
            <!-- <mvc:exclude-mapping path="/download/**" />
            <mvc:exclude-mapping path="/upload/**" /> -->
            <!-- 用户是否已经登录的检查 -->
            <bean id="loginInterceptor" class="com.lwf.ssm.utils.LoginInterceptor"></bean>
        </mvc:interceptor>
    </mvc:interceptors>


    <!-- 只有一个全局异常处理器起作用 -->
    <bean id="exceptionResolver" class="com.lwf.ssm.utils.OverallExceptionResolver"></bean>
</beans>